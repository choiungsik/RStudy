num
num
num
num = 10
num
num <- 10
num
num <- 20
num
num
char <- 'Hello World!'
char
isCheck <- TRUE
isCheck
isCheck <- F
isCheck
sum(10, 20, 30, 40, 50, 60, 70, 80, 90)
sum(10, 20, 30, NA)
sum(10, 20, 30, NALL)
sum(10, 20, 30, NULL)
Sys.Date()
Sys.time()
date()
as.Date(20, '2020-06-29')
as.Date(-40, Sys.Date())
as.Date("2020-12-25") - as.Date(Sys.Date())
as.Date('2020-10-01') - as.Date(Sys.Date())
foods <- c("우럭", "광어", "산오징어", "산낚지", "참치")
foods
foods[2]
foods[1:4]
foods[1:3]
foods[2:3, 5]
foods[2:3] + foods[5]
foods[2, 3, 5]
foods[2:5-4]
foods[2:5] - foods[4]
c(foods[2:5] - foods[4])
foods[c(2, 3, 5)]
foods[1:3]
foods[c(2, 3, 5)]
num <- c(15, 2, 3,5, 48, 6, 84,13 121,546,123 ,54 ,53154,64 1,566, 4,54)
num <- c(15, 2, 3,5, 48, 6, 84,13, 121,546,123 ,54 ,53154,641,566, 4,54)
num
num <- c(15, 2, 3,5, 48, 6, 84,13, 121,546,123 ,54 ,53, 154,641,566, 4,54)
num
num[num >= 30]
num <- seq(1, 100)
num
x <- seq(1, 50, by = 4)
x
x <- seq(1, 50, length.out = 4)
x
var1 <- c(10, 20, 30)
var2 <- c(50, 60, 70)
var1 + var2
var1 <- c(10, 20, 30, 40)
var2 <- c(50, 60, 70)
var1 + var2
var1 <- c(10, 20, 30)
var2 <- c(50, 60, 70)
var1 + var2
homerun <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 13, 13, 12, 12, 12, 11, 11, 16, 16, 16, 17, 17, 17, 18, 19, 22, 23, 24, 25, 26, 27, 30, 38, 39, 40)
hist(homerun)
summary(homerun)
boxplot(homerun)
homerun <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 13, 13, 12, 12, 12, 11, 11, 16, 16, 16, 17, 17, 17, 18, 19, 22, 23, 24, 25, 26, 27, 30, 38, 39, 40, 200)
boxplot(homerun)
hist(homerun)
summary(homerun)
boxplot(homerun)
homerun <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 13, 13, 12, 12, 12, 11, 11, 16, 16, 16, 17, 17, 17, 18, 19, 22, 23, 24, 25, 26, 27, 30, 38, 39, 40)
summary(homerun)
hist(homerun)
hist(homerun)
boxplot(homerun)
homerun <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 13, 13, 12, 12, 12, 11, 11, 16, 16, 16, 17, 17, 17, 18, 19, 22, 23, 24, 25, 26, 27, 30, 38, 39, 40, 100)
summary(homerun)
boxplot(homerun)
num
No <- c(1, 2, 3, 4)
Name <- c('Apple', 'Peach', 'Banana', 'Grape')
Price <- c(500, 200, 100, 50)
Qty <- c(5, 2, 4, 7)
sales <- data.frame(No, Name, Price, Qty)
sales
View(sales)
sales[2, 2]
sales[1, 1]
sales[ , 1]
sales[1 , ]
sales$Price
list.files()
kia <- read.csv("기아타이거즈연봉.csv")
View(kia)
install.packages("wordcloud")
library(wordcloud)
library(wordcloud)
word <- c('강아지', '고양이', '도마뱀', '고슴도치')
fre <- c(40, 30, 20, 10)
wordcloud(word, fre)
wordcloud(word, fre)
wordcloud(word, fre)
wordcloud(word, fre)
wordcloud(word, fre)
wordcloud(word, fre)
wordcloud(word, fre, random.order = F)
wordcloud(word, fre, random.order = F, colors = "blue")
wordcloud(word, fre, random.order = F, colors = c("blue", "red")
wordcloud(word, fre, random.order = F, colors = c("blue", "red"))
wordcloud(word, fre, random.order = F, colors = c("blue", "red"))
install.packages(RColorBrewer)
install.packages(RColorBrewer)
install.packages("RColorBrewer")
install.packages("RColorBrewer")
install.packages("RColorBrewer")
install.packages("RColorBrewer")
library(RColorBrewer)
display.brewer.all()
display.brewer.pal(4, "Dark2")
pal <- brewer.pal(4, "Dark2")
pal
wordcloud(word, fre, random.order = F, colors = pal)
wordcloud(word, fre, random.order = F, colors = pal)
wordcloud(word, fre, random.order = F, colors = c("blue", "red"))
library(wordcloud)
library(wordcloud)
wordcloud(word, fre, random.order = F, colors = pal)
word <- c('강아지', '고양이', '도마뱀', '고슴도치')
fre <- c(40, 30, 20, 10)
wordcloud(word, fre, random.order = F, colors = pal)
kia <- read.csv("기아타이거즈연봉.csv")
wordcloud(kia[ , 2], kia$연봉, random.order = F, colors = pal)
wordcloud(kia[ , 2], kia$연봉, random.order = F, colors = pal)
wordcloud(kia[ , 2], kia$연봉, random.order = F, colors = pal)
wordcloud(kia[ , 2], kia$연봉, random.order = F, colors = pal)
wordcloud(kia[ , 2], kia$연봉, random.order = F, colors = pal)
wordcloud(kia[ , 2], kia$연봉, random.order = F, colors = pal)
wordcloud(kia[ , 2], kia$연봉, random.order = F, colors = pal)
wordcloud(kia[ , 2], kia$연봉, random.order = F, colors = pal)
wordcloud(kia[ , 2], kia$연봉, random.order = F, colors = pal)
wordcloud(kia[ , 2], kia$연봉, random.order = F, colors = pal)
wordcloud(kia[ , 2], kia$연봉, random.order = F, colors = pal)
wordcloud(kia[ , 2], kia$연봉, random.order = F, colors = pal)
wordcloud(kia[ , 2], kia$연봉, random.order = F, colors = pal)
wordcloud(kia[ , 2], kia$연봉, random.order = F, colors = pal)
wordcloud(kia[ , 2], kia$연봉, random.order = F, colors = pal)
wordcloud(kia[ , 2], kia$연봉, random.order = F, colors = pal)
wordcloud(kia[ , 2], kia$연봉, random.order = F, colors = pal)
wordcloud(kia[ , 2], kia$연봉, random.order = F, colors = pal)
wordcloud(kia[ , 2], kia$연봉, random.order = F, colors = pal)
wordcloud(kia[ , 2], kia$연봉, random.order = F, colors = pal)
wordcloud(kia[ , 2], kia$연봉, random.order = F, colors = pal)
wordcloud(kia[ , 2], kia$연봉, random.order = F, colors = pal)
wordcloud(kia[ , 2], kia$연봉, random.order = F, colors = pal)
wordcloud(kia[ , 2], kia$연봉, colors = pal)
wordcloud(kia[ , 2], kia$연봉, colors = pal)
wordcloud(kia[ , 2], kia$연봉, colors = pal)
wordcloud(kia[ , 2], kia$연봉, colors = pal)
wordcloud(kia[ , 2], kia$연봉, random.order = F, colors = pal)
wordcloud(kia[ , 2], kia$연봉, random.order = F, colors = pal)
wordcloud(kia[ , 2], kia$연봉, random.order = F, colors = pal)
display.brewer.all()
display.brewer.pal(4, "Set1")
pal <- brewer.pal(4, "Dark2")
pal
wordcloud(kia[ , 2], kia$연봉, random.order = F, colors = pal)
display.brewer.pal(4, "Set1")
pal <- brewer.pal(4, "Dark2")
display.brewer.pal(4, "Set1")
pal <- brewer.pal(4, "Set1")
pal
wordcloud(word, fre, random.order = F, colors = pal)
wordcloud(kia[ , 2], kia$연봉, random.order = F, colors = pal)
install.packages("Sejong")
install.packages("hash")
install.packages("rJava")
install.packages("tau")
install.packages("RSQLite")
install.packages("devtools")
library("KoNLP")
library("KoNLP")
library("KernSmooth")
library("KernSmooth")
install.packages("wordcloud2")
library("wordcloud2")
library("wordcloud2")
v1 <- "빨리 정상적으로 돌아가서 다시 모여서 수업하면 좋겠네요 ㅎㅎ 집에서 처리하니 편하기는 한데 수업쪽은 많이 힘드실 것 같아여~ 언제쯤이면 해결이 될까요??"
extractNoun(v1)
list.files()
text1 <- readLines("kakao.txt")
text1
(c("킹왕짱"), c("ncn")))
mergeUserDic(data.frame(c("ㅋㅋ루ㅋㅋ"), c("ncn")))
mergeUserDic(data.frame(c("비냉"), c("ncn")))
mergeUserDic(data.frame(c("물냉"), c("ncn")))
mergeUserDic(data.frame(c("ㅂㄴ"), c("ncn")))
mergeUserDic(data.frame(c("한솥"), c("ncn")))
mergeUserDic(data.frame(c("육칼"), c("ncn")))
text1
text2 <- extractNoun(text1)
text1
text2
text3 <- unlist(text2)
text3
# gsub('찾고싶은 문자', '변경할 문자', 데이터)
text4 <- gsub('이모', '', text3)
text4 <- gsub('[ㄱ-ㅎ]', '', text4)
text4 <- gsub('[ㅜ|ㅠ]', '', text4)
text4 <- gsub('(ㅜ|ㅠ)', '', text4)
text4 <- gsub('^^', '', text4)
text4 <- gsub('^^^', '', text4)
text4 <- gsub('^^^^', '', text4)
# ^ 기호를 제곱등으로 잘못 인식할 수 있어 문자형태도 리스트 제거
text4 <- gsub('\\^^', '', text4)
text4 <- gsub('\\^^^', '', text4)
text4 <- gsub('\\^^^^', '', text4)
text4 <- gsub('[~!@#$%^&*()_+=?]<>','',text4)
# 5글자 이상의 명사는 일반적으로 사용빈도가 낮아 제거
text4 <- text4[nchar(text4) > 1]
text4 <- text4[nchar(text4) < 5]
text4
text5 <- table(text4)
text5
text6 <- sort(text5, descreasing = T)
text6
text7 <- head(text6, 200)
text7
wordcloud2(text7)
text7 <- tail(text6, 200)
wordcloud2(text7)
text7 <- head(text6, 100)
wordcloud2(text7)
text7 <- tail(text6, 100)
wordcloud2(text7)
wordcloud2(text7, size = 1)
text7 <- head(text6, 100)
wordcloud2(text7, size = 1)
text7 <- tail(text6, 100)
wordcloud2(text7, size = 1)
text6 <- sort(text5, descreasing = F)
text7 <- tail(text6, 100)
wordcloud2(text7, size = 1)
text7 <- head(text6, 100)
wordcloud2(text7, size = 1)
text6 <- sort(text5, descreasing = T)
text7 <- tail(text6, 100)
text7 <- head(text6, 100)
wordcloud2(text7, size = 1)
text6 <- sort(text5, decreasing = T)
text7 <- head(text6, 100)
wordcloud2(text7, size = 1)
text1 <- readLines("kakao.txt")
text2 <- extractNoun(text1)
text3 <- unlist(text2)
# gsub('찾고싶은 문자', '변경할 문자', 데이터)
text4 <- gsub('이모', '', text3)
text4 <- gsub('[ㄱ-ㅎ]', '', text4)
text4 <- gsub('(ㅜ|ㅠ)', '', text4)
text4 <- gsub('^^', '', text4)
text4 <- gsub('^^^', '', text4)
text4 <- gsub('^^^^', '', text4)
# ^ 기호를 제곱등으로 잘못 인식할 수 있어 문자형태도 리스트 제거
text4 <- gsub('\\^^', '', text4)
text4 <- gsub('\\^^^', '', text4)
text4 <- gsub('\\^^^^', '', text4)
# 특수기호 제거
text4 <- gsub('[~!@#$%^&*()_+=?]<>','',text4)
# 5글자 이상의 명사는 일반적으로 사용빈도가 낮아 제거
text4 <- text4[nchar(text4) > 1]
text4 <- text4[nchar(text4) < 5]
# 각각 단어가 몇개씩 있는지 확인
text5 <- table(text4)
text6 <- sort(text5, decreasing = T)
text7 <- tail(text6, 100)
text7 <- head(text6, 100)
wordcloud2(text7, size = 1)
# ^ 기호를 제곱등으로 잘못 인식할 수 있어 문자형태도 리스트 제거
text4 <- gsub('\\^\\^', '', text4)
text4 <- gsub('\\^\\^\\^', '', text4)
text4 <- gsub('\\^\\^\\^\\^', '', text4)
# 특수기호 제거
text4 <- gsub('[~!@#$%^&*()_+=?]<>','',text4)
# 5글자 이상의 명사는 일반적으로 사용빈도가 낮아 제거
text4 <- text4[nchar(text4) > 1]
text4 <- text4[nchar(text4) < 5]
# 각각 단어가 몇개씩 있는지 확인
text5 <- table(text4)
text6 <- sort(text5, decreasing = T)
text7 <- head(text6, 100)
wordcloud2(text7, size = 1)
name <- c('김지훈', '이유진', '박동현', '김민지')
english <- c(90, 80, 60, 70)
math <- c(50, 60, 100, 20)
data1 = data.frame(name, english, math)
data1
mean(data1[english])
mean(data1$english)
data1$avg = (data1$english + data1$math) / 2
data1
mean(data1$avg)
median(data1$avg)
# 평균점수의 편차
var(data1$avg)
# 분산을 원래 데이터타입으로 맞춤 = 표준편차
sd(data1$avg)
# 사분수로 보여주는 함수
summary(data1$avg)
# 사분수를 시각화하는 함수
boxplot(data1$avg)
# 도수분포표를 시각화하는 함수
hist(data1$avg)
# 패스기준 평균 60점이상 조건문
data1$pass <- ifelse(data1$avg >= 60, 'pass', 'fail')
data1
# pass와 fail의 빈도수 측정
table(data1$pass)
install.packages('ggplot2')
library('ggplot2')
# 빈도수를 시각화해주는 함수
qplot(data1$pass)
list.files()
soccer <- read.csv("soccer.csv")
soccer
names(soccer) <- c("Rank", "Team", "Game", "W", "D", "L")
soccer
soccer$score <- soccer$W * 3 + soccer$D * 1
soccer
hist(soccer$score)
summary(soccer$socre)
summary(soccer$score)
summary(soccer$score)
soccer$grade <- ifelse(soccer$score >= 64.5, "S_team", ifelse(soccer$score >= 48.4, "m_team", "w_team"))
soccer
library(ggplot2)
qplot(soccer$grade)
soccer$grade <- ifelse(soccer$score >= 64.5, "S_team", ifelse(soccer$score >= 43.5, "m_team", "w_team"))
soccer
library(ggplot2)
qplot(soccer$grade)
